{#-

Gather the data needed from pillar and salt-mine

-#}
{%- set cons3rthome=salt['pillar.get']('cons3rt:cons3rt_path','/cons3rt') -%}
{%- set sutsnetwork=pillar['cons3rt']['suts_network'] -%}
{%- set hosts=pillar['cons3rt-infrastructure']['hosts'] -%}
{%- set infratype = salt['pillar.get']('cons3rt-infrastructure:infrastructure_type','undefined') -%}
{%- set domain=pillar['cons3rt-infrastructure']['domain'] -%}
{%- set saltmineips=salt['mine.get']('*'~domain,'network.ip_addrs') -%}
{%- set iplist=[] -%}
{#-

Decide if the infrastructure is deployed in aws or openstack

-#}
{%- if infratype|lower=='aws' or infratype|lower=='openstack' -%}
{#-

Parse through a list of hosts/roles defined in pillar

-#}
{%- for host, value in hosts.iteritems() -%}
{%- if value['fqdn'] is defined and value['fqdn']|lower!='none' -%}{% if iplist is defined -%}
{#-

Determine if the host/role defined in pillar is actually defined in salt-mine

-#}
{%- if saltmineips[value['fqdn']] is not callable -%}
{#-

If the data exists in salt-mine, add the ip to 'iplist' if it is not a duplicate

-#}
{%- set privateip=saltmineips[value['fqdn']][0] -%}{%- if privateip not in iplist -%}
{%- do iplist.append(privateip) -%}{%- endif -%}{%- endif -%}{%- endif -%}{%- endif -%}{% endfor -%}
{#-

For managed infrastructures such as vmware or kvm, rely on information stored in pillar

-#}
{%- else -%}
{#-

Gather fqdn and ip addresses from pillar for parsing

-#}
{%- for host, value in hosts.iteritems() -%}
{#-

Validate that the ip address is actually defined in pillar and that it is unique or first instance

-#}
{%- if value['ip'] is defined and value['ip']|lower!='none' %}{%- if iplist is defined -%}{%- if value['ip'] not in iplist -%}
{%- do iplist.append(value['ip']) -%}{%- endif -%}{%- endif -%}{%- endif -%}
{%- endfor -%}
{%- endif -%}
[global]
  workgroup = workgroup
  server string = Samba Server
  load printers = no
  socket options = TCP_NODELAY IPTOS_LOWDELAY SO_RCVBUF=49152 SO_SNDBUF=49152
  max xmit = 65535
  dead time = 15
  preferred master = no
  hosts allow = {% for ip in iplist -%} {{ip}} {% endfor -%}{% for net in sutsnetwork -%} {{net}} {% endfor -%} 127.
  passdb backend = tdbsam
  security = share
  log file = /var/log/samba/systems/log.%m
  max log size = 50


#============================ Share Definitions ==============================
[CONS3RT]
  comment = CONS3RT share
  path = {{cons3rthome}}
  public = yes
  browsable = no
  writable = yes
  force user = cons3rt
  force group = cons3rt
  kernel oplocks = yes
  oplocks = yes
  level2 oplocks = yes
  hosts allow = {% for ip in iplist -%} {{ip}} {% endfor -%} 127.

[CONS3RT-RUN]
  comment = CONS3RT run share
  path = {{cons3rthome}}/run
  public = yes
  browsable = no
  writable = yes
  force user = cons3rt
  force group = cons3rt
  kernel oplocks = yes
  oplocks = yes
  level2 oplocks = yes

[AGENT-SERVICE]
  comment = Agent Service share
  path = {{cons3rthome}}/agent-service
  public = yes
  browsable = no
  writable = no
  force user = cons3rt
  force group = cons3rt
  kernel oplocks = yes
  oplocks = yes
  level2 oplocks = yes

